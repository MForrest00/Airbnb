paste(reviews_load_stem1, work_dir, reviews_load_stem2,
##                                                    sep = ''))
)
)
paste(reviews_load_stem1, work_dir, reviews_load_stem2,
sep = '')
?as.data.frame
# R and system environment information
as.data.frame(Sys.info())
as.data.frame(R.Version())
# R and system environment information
as.data.frame(Sys.info())
t(as.data.frame(R.Version()))
# R and system environment information
t(as.data.frame(R.Version()))
# R and system environment information
sys_env <- t(as.data.frame(R.Version()))
sys_env
# R and system environment information
sys_env <- t(as.data.frame(R.Version()))
colnames(sys_env) <- c('Value')
sys_env
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbExecute(abnb_db, scrape_sql)
library(RMySQL)
library(DBI)
library(dplyr)
library(ggplot2)
# Load MySQL server address and log-in credentials (replace with your server address and log-in credentials)
mysql_server_address <- readLines('C:/Credentials/AWS MySQL Airbnb Database/serverAddress.txt')
mysql_user_name <- readLines('C:/Credentials/AWS MySQL Airbnb Database/userName.txt')
mysql_password <- readLines('C:/Credentials/AWS MySQL Airbnb Database/password.txt')
# Connect to MySQL database -- this instance has been launched with a database named 'airbnb'
abnb_db <- dbConnect(MySQL(), dbname = 'airbnb', username = mysql_user_name, password = mysql_password,
host = mysql_server_address)
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbExecute(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
scrape
class(scrape)
?save
?dir.create
dir.create('data', showWarnings = FALSE)
dir.create('data', showWarnings = FALSE)
?save
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
save(scrape, file = 'data/scrape.RData')
?load
scrape <- load('data/scrape.RData')
p <- ggplot(scrape, aes(DataScrapeDate, City)) + geom_point() +
facet_grid(. ~ Country) +
theme_bw()
scrape
scrape <- load('data/scrape.RData')
scrape
?load
load('data/scrape.RData')
load('data/scrape.RData')
p <- ggplot(scrape, aes(DataScrapeDate, City)) + geom_point() +
facet_grid(. ~ Country) +
theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(DataScrapeDate, City)) + geom_point() +
facet_grid(Country ~ .) +
theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(DataScrapeDate, City)) + geom_point(aes(color = Country)) +
theme_bw()
print(p)
load('data/scrape.RData')
scrape_arrange <- arrange(scrape, asc(Country))
load('data/scrape.RData')
scrape_arrange <- arrange(scrape, Country)
p <- ggplot(scrape_arrange, aes(DataScrapeDate, City)) + geom_point(aes(color = Country)) +
theme_bw()
print(p)
load('data/scrape.RData')
scrape_arrange <- arrange(scrape, Country)
p <- ggplot(scrape_arrange, aes(DataScrapeDate, City)) + geom_point(aes(color = Country)) +
theme_bw()
print(p)
load('data/scrape.RData')
scrape_arrange <- arrange(scrape, Country)
p <- ggplot(scrape_arrange, aes(DataScrapeDate, City)) + geom_point(aes(color = Country)) +
theme_bw()
print(p)
str(scrape)
?as.factor
?lapply
?dbFetch
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
scrape$Country <- as.factor(scrape$Country)
scrape$State <- as.factor(scrape$State)
scrape$City <- as.factor(scrape$City)
scrape$DataScrapeDate <- as.Date(scrape$DataScrapeDate)
save(scrape, file = 'data/scrape.RData')
load('data/scrape.RData')
scrape_arrange <- arrange(scrape, Country)
p <- ggplot(scrape_arrange, aes(DataScrapeDate, City)) + geom_point(aes(color = Country)) +
theme_bw()
print(p)
str(scrape)
scrape_arrange
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = reorder(City, Country))) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = City)) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = City)) + geom_point(aes(color = Country)) +
facet_grid(. ~ Country) +
xlab('Data Scrape Date') + theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = City)) + geom_point(aes(color = Country)) +
facet_grid(Country ~ .) +
xlab('Data Scrape Date') + theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = City)) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + theme_bw()
print(p)
?interaction
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = interaction(Country, City))) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + theme_bw()
print(p)
load('data/scrape.RData')
p <- ggplot(scrape, aes(x = DataScrapeDate, y = City)) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + theme_bw()
print(p)
knit_with_parameters('C:/Git/Repo/Airbnb/Airbnb.Rmd')
?as.factor
scrape_sql <- 'SELECT * FROM Map_DataScrape'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
library(dplyr)
?arrange
load('data/scrape.RData')
scrape
?order
library(knitr)
?kable
load('data/scrape.RData')
scrape_tbl <- scrape %>% group_by(Country, State, City) %>%
summarize(TotalDataScrapes = n(), FirstDataScrape = min(DataScrapeDate),
LastDataScrape = max(DataScrapeDate)) %>%
select(Country, State, City, TotalDataScrapes, FirstDataScrape, LastDataScrape)
kable(scrape_tbl)
install.packages("stargazer")
library(RMySQL)
library(DBI)
library(dplyr)
library(ggplot2)
library(knitr)
# Load MySQL server address and log-in credentials (replace with your server address and log-in credentials)
mysql_server_address <- readLines('C:/Credentials/AWS MySQL Airbnb Database/serverAddress.txt')
mysql_user_name <- readLines('C:/Credentials/AWS MySQL Airbnb Database/userName.txt')
mysql_password <- readLines('C:/Credentials/AWS MySQL Airbnb Database/password.txt')
# Connect to MySQL database -- this instance has been launched with a database named 'airbnb'
abnb_db <- dbConnect(MySQL(), dbname = 'airbnb', username = mysql_user_name, password = mysql_password,
host = mysql_server_address)
scrape_sql <- 'SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,ls.PropertyType
,ls.RoomType
,COUNT(*) AS ListingsCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS ls ON ds.DataScrape_ID = ls.DataScrape_ID;'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
scrape$Country <- as.factor(scrape$Country)
scrape$State <- as.factor(scrape$State)
scrape$City <- as.factor(scrape$City)
scrape$DataScrapeDate <- as.Date(scrape$DataScrapeDate)
save(scrape, file = 'data/scrape.RData')
scrape_sql <- 'SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,ls.PropertyType
,ls.RoomType
,COUNT(*) AS ListingsCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS ls ON ds.DataScrape_ID = ls.DataScrape_ID
GROUP BY 1, 2, 3, 4, 5, 6;'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
scrape$Country <- as.factor(scrape$Country)
scrape$State <- as.factor(scrape$State)
scrape$City <- as.factor(scrape$City)
scrape$DataScrapeDate <- as.Date(scrape$DataScrapeDate)
save(scrape, file = 'data/scrape.RData')
str(scrape)
scrape_sql <- 'SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,ls.PropertyType
,ls.RoomType
,COUNT(*) AS ListingsCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS ls ON ds.DataScrape_ID = ls.DataScrape_ID
GROUP BY 1, 2, 3, 4, 5, 6;'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch)
dbClearResult(scrape_sql_fetch)
scrape$Country <- as.factor(scrape$Country)
scrape$State <- as.factor(scrape$State)
scrape$City <- as.factor(scrape$City)
scrape$DataScrapeDate <- as.Date(scrape$DataScrapeDate)
scrape$PropertyType <- as.factor(scrape$PropertyType)
scrape$RoomType <- as.factor(scrape$RoomType)
save(scrape, file = 'data/scrape.RData')
scrape_sql <- 'SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,ls.PropertyType
,ls.RoomType
,COUNT(*) AS ListingsCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS ls ON ds.DataScrape_ID = ls.DataScrape_ID
GROUP BY 1, 2, 3, 4, 5, 6;'
scrape_sql_fetch <- dbSendQuery(abnb_db, scrape_sql)
scrape <- dbFetch(scrape_sql_fetch, n = -1)
dbClearResult(scrape_sql_fetch)
scrape$Country <- as.factor(scrape$Country)
scrape$State <- as.factor(scrape$State)
scrape$City <- as.factor(scrape$City)
scrape$DataScrapeDate <- as.Date(scrape$DataScrapeDate)
scrape$PropertyType <- as.factor(scrape$PropertyType)
scrape$RoomType <- as.factor(scrape$RoomType)
save(scrape, file = 'data/scrape.RData')
str(scrape)
?select
load('data/scrape.RData')
scrape <- unique(select(scrape, Country, State, City, DataScrapeDate))
scrape$CountryCity <- paste(scrape$City, ' - ', scrape$Country, sep = '')
scrape$CountryCity <- factor(scrape$CountryCity,
levels = unique(scrape$CountryCity[order(scrape$Country, scrape$City,
decreasing = TRUE)]))
p <- ggplot(scrape, aes(x = DataScrapeDate, y = CountryCity)) + geom_point(aes(color = Country)) +
xlab('Data Scrape Date') + ggtitle('Data Scrape Dates by City and Country') +
theme_bw() + theme(legend.position = 'none', axis.title.y = element_blank())
print(p)
load('data/scrape.RData')
scrape_tbl <- scrape %>% group_by(Country, State, City) %>%
summarize(TotalDataScrapes = n_distinct(DataScrapeDate), FirstDataScrape = min(DataScrapeDate),
LastDataScrape = max(DataScrapeDate)) %>%
select(Country, State, City, 'Total Data Scrapes' = TotalDataScrapes,
'First Data Scrape' = FirstDataScrape, 'Last Data Scrape' = LastDataScrape)
kable(scrape_tbl, align = c('l', 'l', 'l', 'c', 'c', 'c'))
scrape_temp <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>% summarize(TotalListingsCount = sum(TotalListings))
scrape_temp <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>% summarize(TotalListingsCount = sum(ListingsCount))
scrape_temp
filter(scrape_temp, City = 'New York City')
filter(scrape_temp, City == 'New York City')
filter(scrape_temp, City == 'Los Angeles')
mutate(filter(scrape_temp, City == 'Los Angeles'), MaxListings = cummax(TotalListingsCount))
mutate(group_by(filter(scrape_temp, City == 'Los Angeles'), Country, State, City, DataScrapeDate), MaxListings = cummax(TotalListingsCount))
mutate(group_by(filter(scrape_temp, City == 'Los Angeles'), Country, State, City), MaxListings = cummax(TotalListingsCount))
mutate(group_by(filter(scrape_temp, City == 'Los Angeles'), Country, State, City), MaxListings = max(TotalListingsCount))
mutate(group_by(filter(scrape_temp, City == 'Los Angeles' | City == 'Sydney'), Country, State, City), MaxListings = max(TotalListingsCount))
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(ListingsCount = EntireHomeAptListings)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(ListingsCount = 'EntireHomeAptListings')
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(ListingsCount == EntireHomeAptListings)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(ListingsCount = EntireHomeAptListings)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(EntireHomeAptListings = ListingsCount)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(ListingsCount)) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(EntireHomeAptListings = ListingsCount)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City) %>% mutate(MaxListings = max(sum(ListingsCount))) %>%
filter(MaxListings > 10000) %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>% filter(RoomType == 'Entire home/apt') %>%
rename(EntireHomeAptListings = ListingsCount)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings > 10000) %>% filter(RoomType == 'Entire home/apt') %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>%
group_by(select(Country, State, City, DataScrapeDate, MaxListings, TotalListings,
EntireHomeAptListings)) %>%
distinct()
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings > 10000) %>% filter(RoomType == 'Entire home/apt') %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings > 10000) %>% filter(RoomType == 'Entire home/apt') %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
mutate(EntireHomeAptListings = sum(ListingsCount))
#select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
#distinct()
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount))
#select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
#distinct()
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %<%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
scrape
head(scrape, n = 80)
?head
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather('Listings Type', 'Count', 6:7)
library(RMySQL)
library(DBI)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather('Listings Type', 'Count', 6:7)
# <- ggplot(scrape, aes())
#print(p)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
# <- ggplot(scrape, aes())
#print(p)
scrape
scrape
unique(scrape$ListingsType)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
geom_smooth() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
geom_smooth(type = 'lm') + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
?theme
?labs
