filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct()
scrape
head(scrape, n = 80)
?head
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather('Listings Type', 'Count', 6:7)
library(RMySQL)
library(DBI)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather('Listings Type', 'Count', 6:7)
# <- ggplot(scrape, aes())
#print(p)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
# <- ggplot(scrape, aes())
#print(p)
scrape
scrape
unique(scrape$ListingsType)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
geom_smooth() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 10000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count)) + geom_line(aes(color = ListingsType)) +
geom_smooth(type = 'lm') + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw()
print(p)
?theme
?labs
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
library(RMySQL)
library(DBI)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point() +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
scrape
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
nystart <- scrape[which(State == 'New York City' & DataScrapeDate == '2016-07-02' &
ListingsType == 'TotalListings'), 7]
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
nystart <- scrape[which(scrape$State == 'New York City' & scrape$DataScrapeDate == '2016-07-02' &
scrape$ListingsType == 'TotalListings'), 7]
nyend <- scrape[which(scrape$State == 'New York City' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7]
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
nystart
scrape
unique(scrape$City)
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
nystart <- scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2016-07-02' &
scrape$ListingsType == 'TotalListings'), 7]
nyend <- scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7]
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
nystart
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
nystart <- scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2016-07-02' &
scrape$ListingsType == 'TotalListings'), 7]
nyend <- scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7]
lastart <- scrape[which(scrape$City == 'Los Angeles' & scrape$DataScrapeDate == '2016-08-03' &
scrape$ListingsType == 'TotalListings'), 7]
laend <- scrape[which(scrape$City == 'Los Angeles' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7]
parstart <- scrape[which(scrape$City == 'Paris' & scrape$DataScrapeDate == '2016-02-02' &
scrape$ListingsType == 'TotalListings'), 7]
parend <- scrape[which(scrape$City == 'Paris' & scrape$DataScrapeDate == '2016-07-03' &
scrape$ListingsType == 'TotalListings'), 7]
lonstart <- scrape[which(scrape$City == 'London' & scrape$DataScrapeDate == '2016-06-02' &
scrape$ListingsType == 'TotalListings'), 7]
lonend <- scrape[which(scrape$City == 'London' & scrape$DataScrapeDate == '2017-03-04' &
scrape$ListingsType == 'TotalListings'), 7]
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
?formatC
?as.real
?as.numeric
parend - parstart
formatC(parend - parstart, digits = 0, format = 'd', big.mark = ',')
formatC(parend - parstart, format = 'd', big.mark = ',')
class(laend)
laend[1]
laend
laend[1, 1]
test <- 'test'
lonend <- as.numeric(scrape[which(scrape$City == 'London' & scrape$DataScrapeDate == '2017-03-04' &
scrape$ListingsType == 'TotalListings'), 7])
load('data/scrape.RData')
scrape <- scrape %>% group_by(Country, State, City, DataScrapeDate) %>%
mutate(TotalListings = sum(ListingsCount)) %>%
group_by(Country, State, City) %>% mutate(MaxListings = max(TotalListings)) %>%
filter(MaxListings >= 20000) %>% filter(RoomType == 'Entire home/apt') %>%
group_by(Country, State, City, DataScrapeDate, RoomType) %>%
mutate(EntireHomeAptListings = sum(ListingsCount)) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxListings, TotalListings, EntireHomeAptListings) %>%
distinct() %>% gather(ListingsType, Count, 6:7)
nystart <- as.numeric(scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2016-07-02' &
scrape$ListingsType == 'TotalListings'), 7])
nyend <- as.numeric(scrape[which(scrape$City == 'New York City' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7])
lastart <- as.numeric(scrape[which(scrape$City == 'Los Angeles' & scrape$DataScrapeDate == '2016-08-03' &
scrape$ListingsType == 'TotalListings'), 7])
laend <- as.numeric(scrape[which(scrape$City == 'Los Angeles' & scrape$DataScrapeDate == '2017-03-02' &
scrape$ListingsType == 'TotalListings'), 7])
parstart <- as.numeric(scrape[which(scrape$City == 'Paris' & scrape$DataScrapeDate == '2016-02-02' &
scrape$ListingsType == 'TotalListings'), 7])
parend <- as.numeric(scrape[which(scrape$City == 'Paris' & scrape$DataScrapeDate == '2016-07-03' &
scrape$ListingsType == 'TotalListings'), 7])
lonstart <- as.numeric(scrape[which(scrape$City == 'London' & scrape$DataScrapeDate == '2016-06-02' &
scrape$ListingsType == 'TotalListings'), 7])
lonend <- as.numeric(scrape[which(scrape$City == 'London' & scrape$DataScrapeDate == '2017-03-04' &
scrape$ListingsType == 'TotalListings'), 7])
p <- ggplot(scrape, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
?formatC
warnings()
library(RMySQL)
library(DBI)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
warnings()
# Load MySQL server address and log-in credentials (replace with your server address and log-in credentials)
mysql_server_address <- readLines('C:/Credentials/AWS MySQL Airbnb Database/serverAddress.txt')
mysql_user_name <- readLines('C:/Credentials/AWS MySQL Airbnb Database/userName.txt')
mysql_password <- readLines('C:/Credentials/AWS MySQL Airbnb Database/password.txt')
# Connect to MySQL database -- this instance has been launched with a database named 'airbnb'
abnb_db <- dbConnect(MySQL(), dbname = 'airbnb', username = mysql_user_name, password = mysql_password,
host = mysql_server_address)
host_sql <- 'SELECT
a.Country
,a.State
,a.City
,a.DataScrapeDate
,a.ListingCount AS HostListingCount
,COUNT(*) AS HostCount
FROM
(SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,hs.HostID
,COUNT(*) AS ListingCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS hs ON ds.DataScrape_ID = ls.DataScrape_ID
GROUP BY 1, 2, 3, 4, 5) AS a
GROUP BY 1, 2, 3, 4, 5;'
host_sql_fetch <- dbSendQuery(abnb_db, host_sql)
host_sql <- 'SELECT
a.Country
,a.State
,a.City
,a.DataScrapeDate
,a.ListingCount AS HostListingCount
,COUNT(*) AS HostCount
FROM
(SELECT
ds.Country
,ds.State
,ds.City
,ds.DataScrapeDate
,hs.HostID
,COUNT(*) AS ListingCount
FROM Map_DataScrape AS ds
INNER JOIN Listings AS hs ON ds.DataScrape_ID = hs.DataScrape_ID
GROUP BY 1, 2, 3, 4, 5) AS a
GROUP BY 1, 2, 3, 4, 5;'
host_sql_fetch <- dbSendQuery(abnb_db, host_sql)
host <- dbFetch(host_sql_fetch, n = -1)
dbClearResult(host_sql_fetch)
host$Country <- as.factor(host$Country)
host$State <- as.factor(host$State)
host$City <- as.factor(host$City)
host$DataScrapeDate <- as.Date(host$DataScrapeDate)
save(host, file = 'data/host.RData')
host
str(host)
load('data/host.RData')
host <- host %>% group_by(Country, State, City, DataScrapeDate) %>% mutate(TotalHosts = sum(HostCount)) %>%
group_by(Country, State, City) %>% mutate(MaxHosts = max(TotalHosts)) %>%
filter(MaxHosts >= 18000) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxHosts, TotalHosts,) %>%
distinct()
load('data/host.RData')
host <- host %>% group_by(Country, State, City, DataScrapeDate) %>% mutate(TotalHosts = sum(HostCount)) %>%
group_by(Country, State, City) %>% mutate(MaxHosts = max(TotalHosts)) %>%
filter(MaxHosts >= 18000) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxHosts, TotalHosts) %>%
distinct()
#p <- ggplot(host, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
#     geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
#     xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
#     theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
#     scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
#print(p)
host
unique(host$City)
load('data/host.RData')
host <- host %>% group_by(Country, State, City, DataScrapeDate) %>% mutate(TotalHosts = sum(HostCount)) %>%
group_by(Country, State, City) %>% mutate(MaxHosts = max(TotalHosts)) %>%
filter(MaxHosts >= 16000) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxHosts, TotalHosts) %>%
distinct()
#p <- ggplot(host, aes(x = DataScrapeDate, y = Count, group = ListingsType)) +
#     geom_line(aes(color = ListingsType)) + facet_grid(City ~ .) + geom_point(aes(color = ListingsType)) +
#     xlab('Data Scrape Date') + ylab('Listings Count') + ggtitle('Total Listings by City') +
#     theme_bw() + theme(legend.position = 'bottom') + labs(color = 'Listings Type') +
#     scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
#print(p)
unique(host$City)
load('data/host.RData')
host <- host %>% group_by(Country, State, City, DataScrapeDate) %>% mutate(TotalHosts = sum(HostCount)) %>%
group_by(Country, State, City) %>% mutate(MaxHosts = max(TotalHosts)) %>%
filter(MaxHosts >= 16000) %>% ungroup() %>%
select(Country, State, City, DataScrapeDate, MaxHosts, TotalHosts) %>%
distinct()
p <- ggplot(host, aes(x = DataScrapeDate, y = TotalHosts)) +
geom_line() + geom_point() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Host Count') + ggtitle('Total Hosts by City') +
theme_bw() +
scale_y_continuous(labels = function(x) format(x, big.mark = ',', scientific = FALSE))
print(p)
host
load('data/host.RData')
host
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'Power Host', 'Standard Host')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct()
host
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'Power Host', 'Standard Host')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
gather(HostType, Count, 5:6)
host
?spread
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'Power Host', 'Standard Host')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount)
host
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
host
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
p <- ggplot(host, aes(x = DataScrapeDate, y = PercentagePowerHost)) +
geom_line() + geom_pont() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Power Host Percentage') +
ggtitle('Percent of Hosts with > 1 Listing by City') +
theme_bw()
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
p <- ggplot(host, aes(x = DataScrapeDate, y = PercentagePowerHost)) +
geom_line() + geom_point() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Power Host Percentage') +
ggtitle('Percent of Hosts with > 1 Listing by City') +
theme_bw()
print(p)
?format
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
p <- ggplot(host, aes(x = DataScrapeDate, y = percent(PercentagePowerHost))) +
geom_line() + geom_point() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Power Host Percentage') +
ggtitle('Percent of Hosts with > 1 Listing by City') +
theme_bw()
print(p)
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
p <- ggplot(host, aes(x = DataScrapeDate, y = PercentagePowerHost * 100)) +
geom_line() + geom_point() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Power Host Percentage') +
ggtitle('Percent of Hosts with > 1 Listing by City') +
theme_bw()
print(p)
load('data/host.RData')
host <- host %>% mutate(PowerHostFlag = ifelse(HostListingCount >= 2, 'PowerHost', 'StandardHost')) %>%
group_by(Country, State, City, DataScrapeDate, PowerHostFlag) %>%
mutate(GroupHostCount = sum(HostCount)) %>% ungroup() %>%
filter(City == 'New York City' | City == 'Los Angeles' | City == 'Paris' | City == 'London') %>%
select(Country, State, City, DataScrapeDate, PowerHostFlag, GroupHostCount) %>% distinct() %>%
spread(PowerHostFlag, GroupHostCount) %>%
mutate(PercentagePowerHost = PowerHost / (PowerHost + StandardHost))
p <- ggplot(host, aes(x = DataScrapeDate, y = PercentagePowerHost * 100)) +
geom_line() + geom_point() + facet_grid(City ~ .) +
xlab('Data Scrape Date') + ylab('Power Host Percentage') +
ggtitle('Percent of Hosts with > 1 Listing by City') +
theme_bw() + scale_y_continuous(labels = function(x) paste(x, '%', sep = ''))
print(p)
load('data/host.RData')
host
