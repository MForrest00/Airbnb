"0","# Read listings data and populate into SQLite database"
"0","loop <- 1 + max_scrape"
"0","while (loop <= (max_scrape + nrow(dir_df))) {"
"0","    # Repair columns if broken"
"0","    listings_temp <- readLines(paste(data_directory, '/', dir_df[loop, 1], '/',"
"0","                                     dir_df[loop, 2], '/', dir_df[loop, 3], '/',"
"0","                                     dir_df[loop, 4], '/listings.csv.gz', sep = ''))"
"0","    # Fix quoting characters and replace two consecutive double quotes with a single quote"
"0","    listings_temp <- gsub(',\'""', ',""\'', gsub('""""', '\'', listings_temp))"
"0","    # Write temp data to temporary file"
"0","    write(listings_temp, file = 'temp.txt', ncolumns = 1)"
"0","    # Prepare listings data frame"
"0","    listings <- read.table('temp.txt', sep = ',', quote = '""', header = TRUE, comment.char = '',"
"0","                           stringsAsFactors = FALSE)"
"0","    # Remove NAs (interpreted as NULL)"
"0","    listings[is.na(listings)] <- ''"
"0","    # Create extra data rows"
"0","    lst_length <- nrow(listings)"
"0","    id_vec_lst <- rep(NA, lst_length)"
"0","    map_id_vec_lst <- rep(loop, lst_length)"
"0","    # Add extra data rows to data frame"
"0","    listings['Listings_ID'] <- id_vec_lst"
"0","    listings['DataScrape_ID'] <- map_id_vec_lst"
"0","    # Set column names"
"0","    i <- 1"
"0","    while (i <= length(names(listings))) {"
"0","        names(listings)[i] <- as.character(listings_df_colnames$listings_db_colnames"
"0","                                           [match(names(listings)[i],"
"0","                                                  listings_df_colnames$listings_ds_colnames)])"
"0","        i <- i + 1"
"0","    }"
"0","    # Fill in missing columns with NA"
"0","    i <- 1"
"0","    while (i <= length(listings_df_colnames$listings_db_colnames)) {"
"0","        if (!is.element(listings_df_colnames$listings_db_colnames[i], names(listings))) {"
"0","            temp_vec <- rep(NA, lst_length)"
"0","            listings[as.character(listings_df_colnames$listings_db_colnames[i])] <- temp_vec"
"0","        }"
"0","        i <- i + 1"
"0","    }"
"0","    # Reorder data frame"
"0","    i <- 1"
"0","    name_vec <- vector(mode = 'integer')"
"0","    while (i <= length(listings_df_colnames$listings_db_colnames)) {"
"0","        name_vec[i] <- match(listings_df_colnames$listings_db_colnames[i], names(listings))"
"0","        i <- i + 1"
"0","    }"
"0","    listings <- listings[name_vec]"
"0","    # Strip dollar signs and commas from prices"
"0","    listings$Price <- gsub(',', '', gsub('\\$', '', listings$Price))"
"0","    listings$WeeklyPrice <- gsub(',', '', gsub('\\$', '', listings$WeeklyPrice))"
"0","    listings$MonthlyPrice <- gsub(',', '', gsub('\\$', '', listings$MonthlyPrice))"
"0","    listings$SecurityDeposit <- gsub(',', '', gsub('\\$', '', listings$SecurityDeposit))"
"0","    listings$CleaningFee <- gsub(',', '', gsub('\\$', '', listings$CleaningFee))"
"0","    listings$ExtraPeople <- gsub(',', '', gsub('\\$', '', listings$ExtraPeople))"
"0","    # Strip percent signs"
"0","    listings$HostResponseRate <- gsub('%', '', listings$HostResponseRate)"
"0","    listings$HostAcceptanceRate <- gsub('%', '', listings$HostAcceptanceRate)"
"0","    # Write listings data frame to SQLite database"
"0","    dbWriteTable(abnb_db, name = 'Listings', value = listings, append = TRUE)"
"0","    "
"0","    # Increment loop"
"0","    loop <- loop + 1"
"0","}"
"2","
"
